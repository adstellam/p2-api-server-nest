"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskOperationsData = void 0;
const openapi = require("@nestjs/swagger");
class TaskOperationsData {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, work_order_name: { required: true, type: () => String }, job_id: { required: true, type: () => String }, job_name: { required: true, type: () => String }, task_id: { required: true, type: () => String }, task_name: { required: true, type: () => String }, organization_id: { required: true, type: () => String }, grower_name: { required: true, type: () => String }, crop_season: { required: true, type: () => String }, field_name: { required: true, type: () => String }, crop_zone_name: { required: true, type: () => String }, operation_type: { required: true, enum: require("../enums").OperationTypeEnum }, machine_id: { required: true, type: () => String }, machine_name: { required: true, type: () => String }, machine_uses_json: { required: true, type: () => String }, travel_distance_meter_array: { required: true, type: () => [Number] }, work_distance_meter_array: { required: true, type: () => [Number] }, elapsed_time_seconds_array: { required: true, type: () => [Number] }, work_time_seconds_array: { required: true, type: () => [Number] }, crop_count_array: { required: true, type: () => [Number] }, width_meter_array: { required: true, type: () => [Number] }, plant_line_count_array: { required: true, type: () => [Number] }, line_spacing_meter_array: { required: true, type: () => [Number] }, plant_spacing_meter_array: { required: true, type: () => [Number] }, buffer_distance_meter_array: { required: true, type: () => [Number] }, lens_working_dist_meter_array: { required: true, type: () => [Number] }, max_side_shift_travel_meter_array: { required: true, type: () => [Number] }, fov_height_degree_array: { required: true, type: () => [Number] }, detection_rate_threshold_arra: { required: true, type: () => [Number] }, total_crop_count_4: { required: true, type: () => Number }, total_crop_count_5: { required: true, type: () => Number }, total_crop_count_6: { required: true, type: () => Number }, total_crop_count_7: { required: true, type: () => Number }, total_crop_count_8: { required: true, type: () => Number }, total_elapsed_time_in_seconds: { required: true, type: () => Number }, spatial_records_json: { required: true, type: () => String }, data_log_trigger_record_json: { required: true, type: () => String } };
    }
}
exports.TaskOperationsData = TaskOperationsData;
//# sourceMappingURL=task-operations-data.entity.js.map